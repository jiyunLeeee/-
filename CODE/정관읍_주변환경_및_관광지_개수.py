# -*- coding: utf-8 -*-
"""정관읍_주변환경 및 관광지 개수.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kKt8gO9mmyIQwHO26sU1-LNsUBqmAPNE
"""

# 한글 폰트 다운 (다운 완료시 런타임 재시작 수행해주세요!)
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

# 드라이브 연결
from google.colab import drive
drive.mount('/content/drive')

pip install colour

pip install geopandas

pip install haversine

# Commented out IPython magic to ensure Python compatibility.
## 라이브러리 설치
import os
import requests
from tqdm import tqdm
from haversine import haversine, Unit

import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import seaborn as sns
import colour
from colour import Color
from matplotlib import rc
import missingno as msno

import json
import geopandas as gpd
import folium
from folium.features import CustomIcon

import warnings
# %matplotlib inline
# %config InlineBackend.figure_format = 'retina'

rc('font', family='NanumBarunGothic')
warnings.filterwarnings("ignore")

hotel_df = pd.read_csv('/content/drive/MyDrive/부산 관광 아이디어 공모전/모델링) 세부분석 /정관읍/데이터/부산광역시_정관읍_호텔현황.csv')

hotel_df

"""# 유형별 시설 집계

## 업무
"""

study_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'스터디카페',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()
    study_num.append(len([s for s in [i['category_name'] for i in total['documents']] if "스터디카페" in s]))

study_num

hotel_df['스터디카페'] = study_num

office_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'공유오피스',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()
    office_num.append(len([s for s in [i['category_name'] for i in total['documents']] if "서비스,산업 > 전문대행 > 공간대여 > 공유오피스" in s]))

office_num

hotel_df['공유오피스'] = office_num

"""## 관광"""

tour_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'관광지',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 10000} # 관광지만 10km
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    tour_num.append(total)

tour_num

hotel_df['관광지'] = tour_num

"""## 편의"""

pharmacy_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'약국',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    pharmacy_num.append(total)

pharmacy_num

hotel_df['약국'] = pharmacy_num

hospital_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'병원',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    hospital_num.append(total)

hospital_num

hotel_df['병원'] = hospital_num

# 병원의 경우, if 노인, 요양병원도 함께 집계된다면 해당 경우는 빼줌
# hotel_df['병원'] = [ai - bi for ai, bi in zip(hospital_num, nursing_hospital_num)]

bank_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'은행',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    bank_num.append(total)
bank_num

hotel_df['은행'] = bank_num

supermarket_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'대형마트',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    supermarket_num.append(total)
supermarket_num

hotel_df['대형마트'] = supermarket_num

convenience_store_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'편의점',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    convenience_store_num.append(total)
convenience_store_num

hotel_df['편의점'] = convenience_store_num

sing_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'노래방',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    sing_num.append(total)
sing_num

hotel_df['노래방'] = sing_num

pc_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'게임방,PC방',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    pc_num.append(total)
pc_num

hotel_df['게임방,PC방'] = pc_num

park_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'공원',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json() # ['meta']['total_count']
    park_num.append(len([s for s in [i['category_name'] for i in total['documents']] if "여행 > 공원" in s]))
park_num

hotel_df['공원'] = park_num

theater_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'영화관',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    theater_num.append(total)
theater_num

hotel_df['영화관'] = theater_num

library_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'도서관',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json() # ['meta']['total_count']
    library_num.append(len([s for s in [i['category_name'] for i in total['documents']] if "교육,학문 > 학습시설 > 도서관" in s]))
library_num

hotel_df['도서관'] = library_num

gym_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'헬스장',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    gym_num.append(total)

gym_num

hotel_df['헬스장'] = gym_num

golf_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'골프연습장',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    golf_num.append(total)

golf_num

hotel_df['골프연습장'] = golf_num

swimming_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'수영장',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()# ['meta']['total_count']
    swimming_num.append(len([s for s in [i['category_name'] for i in total['documents']] if "수영장" in s]))

swimming_num

hotel_df['수영장'] = swimming_num

"""## 식음"""

restaurant_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'음식점',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    restaurant_num.append(total)
restaurant_num

hotel_df['음식점'] = restaurant_num

cafe_num = []
for i in tqdm(range(0,len(hotel_df))):
    url = 'https://dapi.kakao.com/v2/local/search/keyword.json'
    params = {'query':'커피전문점',
                'x': hotel_df["경도"][i],
              'y':hotel_df['위도'][i],
              'radius': 1000}
    headers = {"Authorization": "KakaoAK ea955b4e90386bf89fcd94c7d362e516"}
    total = requests.get(url, params=params, headers=headers).json()['meta']['total_count']
    cafe_num.append(total)
cafe_num

hotel_df['커피전문점'] = cafe_num

"""## 교통"""

bus_df = pd.read_csv('/content/drive/MyDrive/부산 관광 아이디어 공모전/모델링) 세부분석 /부전2동/데이터/부산광역시_버스정류소.csv')
subway_df = pd.read_csv('/content/drive/MyDrive/부산 관광 아이디어 공모전/모델링) 세부분석 /부전2동/데이터/부산교통공사_도시철도역사정보.csv', encoding='utf-16')

bus_df

subway_df

# 지하철역 데이터 정리
subway_df = pd.DataFrame(subway_df.iloc[:,0].str.split('\t').tolist(), columns=subway_df.columns[0].split('\t'))

subway_df

# 위경도 변수 실수형으로 변경
subway_df = subway_df.astype({'역위도':'float', '역경도':'float'})

# 1km 내 버스정류장 개수
bus_num = []

for i in tqdm(range(len(hotel_df))):

  n = 0
  hotel_location = (hotel_df.위도[i], hotel_df.경도[i])

  for j in range(len(bus_df)):

    bus_location = (bus_df.gpsy[j], bus_df.gpsx[j])

    if haversine(hotel_location, bus_location, unit = 'km') <= 1:
      n += 1

  bus_num.append(n)

hotel_df['버스정류장'] = bus_num

# 1km 내 지하철역 개수
subway_num = []

for i in tqdm(range(len(hotel_df))):

  n = 0
  hotel_location = (hotel_df.위도[i], hotel_df.경도[i])

  for j in range(len(subway_df)):

    subway_location = (subway_df.역위도[j], subway_df.역경도[j])

    if haversine(hotel_location, subway_location, unit = 'km') <= 1:
      n += 1

  subway_num.append(n)

hotel_df['지하철역'] = subway_num

hotel_df

"""# 유형별 변수 정리"""

hotel_df.columns

# 편의시설
hotel_df['편의시설'] = sum([hotel_df['약국'], hotel_df['병원'], hotel_df['은행'], hotel_df['대형마트'], hotel_df['편의점'], hotel_df['노래방'], hotel_df['게임방,PC방'],
                        hotel_df['공원'], hotel_df['영화관'], hotel_df['도서관'], hotel_df['헬스장'], hotel_df['골프연습장'], hotel_df['수영장']])

# 업무시설
hotel_df['업무시설'] = sum([hotel_df['스터디카페'], hotel_df['공유오피스']])

# 식음시설
hotel_df['식음시설'] = sum([hotel_df['음식점'], hotel_df['커피전문점']])

# 교통시설
hotel_df['교통시설'] = sum([hotel_df['버스정류장'], hotel_df['지하철역']])

hotel_df_radar = hotel_df[['업소명', '영업소 주소(도로명)', '편의시설', '업무시설', '식음시설', '교통시설', '관광지']]

hotel_df_radar

"""# 방사형 차트 시각화"""

from sklearn.preprocessing import StandardScaler

# Standardization 평균 0 / 분산 1
scaler = StandardScaler()

scaler = scaler.fit_transform(hotel_df_radar.loc[:, ['편의시설', '업무시설', '식음시설', '교통시설', '관광지']])

scaler

hotel_df_radar_sc = hotel_df_radar.copy()
hotel_df_radar_sc[['편의시설', '업무시설', '식음시설', '교통시설', '관광지']] = scaler

hotel_df_radar_sc

categories = ['편의시설', '업무시설', '식음시설', '교통시설', '관광지']
categories = [*categories, categories[0]]

hotel_grade = hotel_df_radar_sc.loc[0, ['편의시설', '업무시설', '식음시설', '교통시설', '관광지']].tolist()
hotel_grade = [*hotel_grade, hotel_grade[0]]

label_loc = np.linspace(start=0, stop=2*np.pi, num=len(hotel_grade))

plt.figure(figsize=(8,8))
ax = plt.subplot(polar=True)
plt.xticks(label_loc, labels=categories, fontsize=13)

for i in tqdm(range(len(hotel_df_radar_sc))):
  hotel_grade = hotel_df_radar_sc.loc[i, ['편의시설', '업무시설', '식음시설', '교통시설', '관광지']].tolist()
  hotel_grade = [*hotel_grade, hotel_grade[0]]

  ax.plot(label_loc, hotel_grade, label=hotel_df_radar.업소명[i], linestyle='dashed')
  ax.fill(label_loc, hotel_grade, alpha=0.3)

ax.legend(bbox_to_anchor=(1.4, 1))
plt.show()

"""❄ 1. 덴바스타 -> 호텔 안이 예쁨 매우 좋다
  2. 브라운도드 정관점 -> 24시간 이용 카페
  3. 에이치에비뉴 정관점 -> 광안리점이 좀 좋은듯.. 여긴 뭐 평범해
"""